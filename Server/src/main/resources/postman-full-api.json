{
	"info": {
		"_postman_id": "d5b348e6-c15f-44bd-bbb6-d1f2171b22d8",
		"name": "Full API Test Suite (Based on Swagger)",
		"description": "A comprehensive, sequential test collection generated from the OpenAPI specification for the Online Food Ordering system. Covers all user roles and major API functionalities.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47006547",
		"_collection_link": "https://satellite-meteorologist-17546810-1783018.postman.co/workspace/aba4a38f-08fe-43cc-8bfb-0035f4fc78a0/collection/47006547-d5b348e6-c15f-44bd-bbb6-d1f2171b22d8?action=share&source=collection_link&creator=47006547"
	},
	"item": [
		{
			"name": "1. User Onboarding & Authentication",
			"item": [
				{
					"name": "1.1 Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.test(\"Admin token received\", () => { pm.expect(res.token).to.be.a('string'); });",
									"pm.collectionVariables.set(\"admin_token\", res.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}auth/login",
							"host": [
								"{{baseUrl}}auth"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2 Register Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"seller_id\", res.user_id);",
									"pm.collectionVariables.set(\"seller_token\", res.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe Seller\",\n  \"phone\": \"091255555555\",\n  \"email\": \"john@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"address\": \"123 Seller St\",\n  \"role\": \"SELLER\",\n  \"bank_info\": {\n    \"bank_name\": \"Test Bank\",\n    \"account_number\": \"1234567890\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}auth/register",
							"host": [
								"{{baseUrl}}auth"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.3 Admin Approves Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"APPROVED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}admin/users/{{seller_id}}/status",
							"host": [
								"{{baseUrl}}admin"
							],
							"path": [
								"users",
								"{{seller_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.4 Register Buyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"buyer_id\", res.user_id);",
									"pm.collectionVariables.set(\"buyer_token\", res.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sara Buyer\",\n    \"phone\": \"09120000032\",\n    \"email\": null,\n    \"password\": \"StrongPass456!\",\n    \"address\": \"45 Buyer Ave\",\n    \"role\": \"CUSTOMER\",\n    \"bank_info\": {}   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}auth/register",
							"host": [
								"{{baseUrl}}auth"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.5 Register Courier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"courier_id\", res.user_id);",
									"pm.collectionVariables.set(\"courier_token\", res.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ali Courier\",\n    \"phone\": \"09120300003\",\n    \"email\": null,\n    \"password\": \"CourierPass789!\",\n    \"address\": \"22 Courier Blvd\",\n    \"role\": \"COURIER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}auth/register",
							"host": [
								"{{baseUrl}}auth"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.6 Admin Approves Courier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"approved\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}admin/users/{{courier_id}}/status",
							"host": [
								"{{baseUrl}}admin"
							],
							"path": [
								"users",
								"{{courier_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Buyer Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Seller: Restaurant & Menu Management",
			"item": [
				{
					"name": "2.1 Seller Creates Restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", () => { pm.response.to.have.status(201); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"restaurant_id\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tehran Burger 2 \",\n    \"address\": \"123 Food St\",\n    \"phone\": \"091234345678457\",\n    \"taxFee\": 9,\n    \"additionalFee\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}restaurants",
							"host": [
								"{{baseUrl}}restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 Seller Adds Food Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"food_item_id\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Classic Burger\",\n    \"description\": \"A classic beef burger.\",\n    \"price\": 15000,\n    \"quantity\": 50,\n    \"categories\": [\"burger\", \"classic\"],\n    \"vendor_id\": \"{{seller_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}restaurants/{{restaurant_id}}/item",
							"host": [
								"{{baseUrl}}restaurants"
							],
							"path": [
								"{{restaurant_id}}",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3 Seller Creates Menu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"menu_title\", res.title);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Main Courses\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}restaurants/{{restaurant_id}}/menu",
							"host": [
								"{{baseUrl}}restaurants"
							],
							"path": [
								"{{restaurant_id}}",
								"menu"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.4 Seller Adds Item to Menu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_ids\": [{{food_item_id}}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}restaurants/{{restaurant_id}}/menu/{{menu_title}}",
							"host": [
								"{{baseUrl}}restaurants"
							],
							"path": [
								"{{restaurant_id}}",
								"menu",
								"{{menu_title}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Buyer: Discovery & Ordering",
			"item": [
				{
					"name": "3.1 Buyer Searches for Vendors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.test(\"Found the created restaurant\", () => {",
									"    const found = res.some(r => r.id === pm.collectionVariables.get('restaurant_id'));",
									"    pm.expect(found).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search\": \"Burger\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}vendors",
							"host": [
								"{{baseUrl}}vendors"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2 Buyer Places an Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"order_id\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vendor_id\": {{restaurant_id}},\n    \"address\": \"Tehran, Valiasr Street, No. 10\",\n    \"items\": [\n        {\n            \"id\": {{food_item_id}},\n            \"quantity\": 2\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}orders",
							"host": [
								"{{baseUrl}}orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Order Fulfillment",
			"item": [
				{
					"name": "4.1 Seller Accepts Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"accepted\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}restaurants/orders/{{order_id}}",
							"host": [
								"{{baseUrl}}restaurants"
							],
							"path": [
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.2 Courier Views Available Deliveries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{courier_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}deliveries/available",
							"host": [
								"{{baseUrl}}deliveries"
							],
							"path": [
								"available"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.3 Courier Accepts Delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{courier_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"accepted\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}deliveries/{{order_id}}",
							"host": [
								"{{baseUrl}}deliveries"
							],
							"path": [
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.4 Courier Delivers Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{courier_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"delivered\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}deliveries/{{order_id}}",
							"host": [
								"{{baseUrl}}deliveries"
							],
							"path": [
								"{{order_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Post-Order & Admin",
			"item": [
				{
					"name": "5.1 Buyer Submits Rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderId\": {{order_id}},\n    \"score\": 5,\n    \"comment\": \"Excellent burger!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}ratings",
							"host": [
								"{{baseUrl}}ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "5.2 Admin Creates Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", () => { pm.response.to.have.status(201); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"coupon_id\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"SUMMER25\",\n    \"value\": 25,\n    \"min_price\": 20000,\n    \"user_count\": 100,\n    \"validFrom\": \"2025-06-01\",\n    \"validUntil\": \"2025-09-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}admin/coupons",
							"host": [
								"{{baseUrl}}admin"
							],
							"path": [
								"coupons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Buyer Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Test Buyer Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "5.3 Admin Views All Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}admin/orders",
							"host": [
								"{{baseUrl}}admin"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "admin_token",
			"value": ""
		},
		{
			"key": "seller_id",
			"value": ""
		},
		{
			"key": "seller_token",
			"value": ""
		},
		{
			"key": "buyer_id",
			"value": ""
		},
		{
			"key": "buyer_token",
			"value": ""
		},
		{
			"key": "courier_id",
			"value": ""
		},
		{
			"key": "courier_token",
			"value": ""
		},
		{
			"key": "restaurant_id",
			"value": ""
		},
		{
			"key": "menu_title",
			"value": ""
		},
		{
			"key": "order_id",
			"value": ""
		},
		{
			"key": "food_item_id",
			"value": ""
		}
	]
}